name: openwrt-22.03

on:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Set time zone
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a

    - name: Free disk space
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons android-sdk-libsparse-utils android-sdk-ext4-utils
        echo "deb http://mirrors.163.com/ubuntu/ bionic-security main" | sudo tee -a /etc/apt/sources.list
        sudo -E apt-get update
        sudo -E apt-cache policy libssl1.0-dev
        sudo -E apt-get install -y libssl1.0-dev kmod
        sudo -E apt-get clean -y
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h

    - name: Compile Openwrt
      id: compileopenwrt
      run: |
        bash <(curl -sS ${{ secrets.script_url }}) rc
        cd openwrt
        tags=$(git describe --abbrev=0 --tags)
        echo "latest_release=$tags" >>$GITHUB_ENV

    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        mkdir -p rom
        cp -a rk356x_tools/out/*.gz rom/
        cp -a rk356x_tools/out/*.zip rom/
        cp -a rk356x_tools/out/*.txt rom/
        cp -a rk356x_tools/out/*.buildinfo rom/

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1.10.0
      with:
        name: OpenWRT-${{ env.latest_release }}
        allowUpdates: true
        tag: ${{ env.latest_release }}
        commit: master
        prerelease: true
        replacesArtifacts: true
        token: ${{ secrets.workflow_token }}
        artifacts: rom/*

    - name: Upload Firmware - AliyunDrive
      id: upload-aliyundrive
      run: |
        # AliyunDrive Binary
        sudo curl -L ${{ secrets.aliyundrive }} -o /bin/aliyundrive --progress-bar
        sudo chmod 0755 /bin/aliyundrive
        # Get RefreshToken
        aliyun_token=`curl -s ${{ secrets.aliyun_token }}`
        echo "refresh_token: '$aliyun_token'" > ~/.config/aliyunpan.yaml
        # Upload
        version=$(cat openwrt/version.txt)

        # hash
        aliyundrive upload --retry 10 -f rom/manifest.txt nanopi-r5s/hash/
        aliyundrive upload --retry 10 -f rom/config.buildinfo nanopi-r5s/hash/
        aliyundrive upload --retry 10 -f rom/sha256sums.txt nanopi-r5s/hash/
        aliyundrive upload --retry 10 -f rom/*-r5s-emmc.img.zip nanopi-r5s/hash/
        aliyundrive upload --retry 10 -f rom/*-r5s-squashfs-sysupgrade.img.gz nanopi-r5s/hash/
        aliyundrive upload --retry 10 -f rom/*-r5s-ext4-sysupgrade.img.gz nanopi-r5s/hash/

        # r5s.cooluc.com
        aliyundrive mkdir nanopi-r5s/candidate/$version
        aliyundrive upload -f rom/manifest.txt nanopi-r5s/candidate/$version/
        aliyundrive upload -f rom/config.buildinfo nanopi-r5s/candidate/$version/
        aliyundrive upload -f rom/sha256sums.txt nanopi-r5s/candidate/$version/
        aliyundrive upload -f rom/*-r5s-emmc.img.zip nanopi-r5s/candidate/$version/
        aliyundrive upload -f rom/*-r5s-squashfs-sysupgrade.img.gz nanopi-r5s/candidate/$version/
        aliyundrive upload -f rom/*-r5s-ext4-sysupgrade.img.gz nanopi-r5s/candidate/$version/
